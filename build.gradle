apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "http://cobra.cs.uni-duesseldorf.de/artifactory/libs-snapshot-local"
    }
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.11'
    compile group: 'org.coreasm', name: 'org.coreasm.engine', version: '1.6.5-SNAPSHOT'
}

jar {
    def getRuntimeDependencyEntities = { configurations.runtime.resolve() }                // list of included dependencies
    def entityName = { it.isDirectory() ? it.name : it.name[0..<it.name.lastIndexOf('.')] }  // internal directory name is source directory name or jar file name (sans .jar)

    manifest {
        attributes "Main-Class" : 'WebASM'
        attributes "Class-Path" : getRuntimeDependencyEntities().collect { entityName(it) }  // set classpath to list of internal directories created
    }

// copy each dependency into separate internal directory
    doFirst {
        getRuntimeDependencyEntities().each {
            def dest = entityName(it)
            if ( it.isDirectory() ) {
                from (it) {
                    into dest
                }
            } else {
                // remove manifests and the security files from jar contents.
                from (zipTree(it)) {
                    exclude 'META-INF/MANIFEST.MF'
                    exclude 'META-INF/*.SF'
                    exclude 'META-INF/*.DSA'
                    exclude 'META-INF/*.RSA'
                    into dest
                }
            }
        }
    }
}